[comment encoding = UTF-8 /]
[module main('http://www.eclipse.org/uml2/5.0.0/UML')]

[import org::polarsys::chess::iot::generator::services::usesUML2Services/]
[import org::polarsys::chess::iot::generator::things::generateMainBoardThing /]
[import org::polarsys::chess::iot::generator::legal::License /]
[import org::polarsys::chess::iot::generator::util::generateDatatypes /]
[import org::polarsys::chess::iot::generator::util::generateTimer /]
[import org::polarsys::chess::iot::generator::things::generateActuatorThing /]
[import org::polarsys::chess::iot::generator::things::generateSensorThing /]
[import org::polarsys::chess::iot::generator::things::generateVirtualElementThing /]

[template public generateElement (aPackage : Package)]
		[if (aPackage.name='modelComponentView')]
			[for (VE : Component |  aPackage.allOwnedElements()->filter(Component))]
			[comment check if we have a virtual entity /]
				[if(checkAppliedStereotype(VE,'VirtualEntity'))]
					[for(c:Component | getSubComponents(VE,aPackage))]
						[if(checkAppliedStereotype(c,'Sensor'))]
							[generateSensorThing(c,aPackage,VE.name)/]
						[elseif(checkAppliedStereotype(c,'Actuator'))]
							[generateActuatorThing(c,aPackage,VE.name)/]
						[elseif(checkAppliedStereotype(c,'VirtualElement'))]
							[generateVirtualElementThing(c,aPackage,VE.name)/]
					[comment generate the virtual board code /]
						[elseif(checkAppliedStereotype(c,'VirtualBoard'))]
							[generateMainThing(c,aPackage,VE)/]
						[/if]
					[/for]
					[if(checkIfVirtualCompIsThere())]
						[generateLicense()/]
				        [generateDatatypes()/]
				        [generateTimer()/]
			        [/if]

				[/if]				 
			[/for]
		[/if]
[/template]