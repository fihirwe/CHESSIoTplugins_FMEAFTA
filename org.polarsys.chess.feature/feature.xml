<?xml version="1.0" encoding="UTF-8"?>
<feature
      id="org.polarsys.chess.feature"
      label="CHESSIoT extension supported FTA, ThingML model generation and IoT deployment support"
      version="1.0.6.qualifier"
      provider-name="Intecs Solutions SpA">

   <description url="http://www.example.com/description">
      The CHESSIoT environment is built on top of the CHESS toolchain
with the aim of providing a fully decoupled extension for supporting
the design, development, analysis, and deployment targeting mainly
the multi-layered IoT systems. In CHESSIoT, different aspects
of the system can be designed independently and then interlinked
to satisfy specific engineering tasks to be performed on the
model. To achieve that, the designer relies on a CHESSIoT DSL
in which the meta-modeling syntax has been specified as an extension
to both UML and SysML languages. 
CHESSIoT DSL is made up of three primary DSLs (abstract syntax)
in which multiple metamodels, metaclasses, and relationships
are defined according to the current modeling interest. Following
a component-based design methodology, it offers means for the
user to compose all the software components of the system, their
internal decomposition as well as their functional behaviors
through the use of state machines. When the model is complete,
a CHESSIoT2ThingML model transformation is launched to generate
a series of fully functional ThingML source models.  
CHESSIoT safety analysis offers a complete cross-domains but
IoT-favourable safety analysis methodology in which the individual
component failure behavior, as well as the entire system failure
behavior, are specified using error propagation and transformation
rules. For instance, the new approach allows the specification
of IoT-specific failure behavior, such as an internal failure
of a component that does not have an input port (eg: a sensor).
Furthermore, the new development allows the full generation of
the system&amp;apos;s Fault Trees (FTs) as well as performing qualitative
and quantitative Fault Tree Analysis (FTA).
In addition to that, CHESSIoT offers means for modeling IoT system
deployment plans as well as its runtime service provisioning.
The IoT system components of a typical IoT system can be deployed
at any layer namely edge, fog, and cloud. The CHESSIoT deployment
environment aims to support the users in decomposing of IoT system
deployment plan as well as managing deployed node services at
all layers. The deployment model connects the software to the
actual system nodes in which the software program will be executed.
The model decomposes the inter-dependency between different nodes,
machines, and services deployed to it. When the model is complete,
a model-to-text transformation can be launched which will generate
a .yaml configuration file ready to be executed on a docker server.
Finally, CHESSIoT offers a model-driven runtime service provisioning
environment that allows the automatic configuration of software
services based on a predefined model. The CHESSIoT  provisioning
abstraction is defined using deployment scripts referred to as
agents. These agents are annotated to the deployment nodes in
the model, to provide run-time monitoring of the deployed services.
A textual language for defining deployment rules is used to describe
the agents&amp;apos; behavior, which is later transformed into Ansible
playbook scripts that can be run manually on a remote machine
based on the status of the deployed configuration.
   </description>

   <copyright url="http://www.example.com/copyright">
      /*******************************************************************************
 * Copyright (c) 2023, Intecs
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Felicien Ihirwe - initial API and implementation
 	   Email: felicien.ihirwe@intecs.it
 *******************************************************************************/
   </copyright>

   <license url="http://www.example.com/license">
      Eclipse Public License - v 1.0

THE ACCOMPANYING PROGRAM IS PROVIDED UNDER THE TERMS OF THIS ECLIPSE PUBLIC LICENSE (&amp;quot;AGREEMENT&amp;quot;). ANY USE, REPRODUCTION 
OR DISTRIBUTION OF THE PROGRAM CONSTITUTES RECIPIENT&amp;apos;S ACCEPTANCE OF THIS AGREEMENT.
1. DEFINITIONS
&amp;quot;Contribution&amp;quot; means:
a) in the case of the initial Contributor, the initial code and documentation distributed under this Agreement, and
b) in the case of each subsequent Contributor:
i) changes to the Program, and
ii) additions to the Program;
where such changes and/or additions to the Program originate from and are distributed by that particular Contributor. 
A Contribution &amp;apos;originates&amp;apos; from a Contributor if it was added to the Program by such Contributor itself or anyone 
acting on such Contributor&amp;apos;s behalf. Contributions do not include additions to the Program which: (i) are separate 
modules of software distributed in conjunction with the Program under their own license agreement, 
and (ii) are not derivative works of the Program.
&amp;quot;Contributor&amp;quot; means any person or entity that distributes the Program.
&amp;quot;Licensed Patents&amp;quot; mean patent claims licensable by a Contributor which are necessarily infringed by the use or 
sale of its Contribution alone or when combined with the Program.
&amp;quot;Program&amp;quot; means the Contributions distributed in accordance with this Agreement.
&amp;quot;Recipient&amp;quot; means anyone who receives the Program under this Agreement, including all Contributors.
2. GRANT OF RIGHTS
a) Subject to the terms of this Agreement, each Contributor hereby grants Recipient a non-exclusive, worldwide, 
royalty-free copyright license to reproduce, prepare derivative works of, publicly display, publicly perform, 
distribute and sublicense the Contribution of such Contributor, if any, and such derivative works, in source 
code and object code form.
b) Subject to the terms of this Agreement, each Contributor hereby grants Recipient a non-exclusive, worldwide, 
royalty-free patent license under Licensed Patents to make, use, sell, offer to sell, import and otherwise transfer 
the Contribution of such Contributor, if any, in source code and object code form. This patent license shall apply 
to the combination of the Contribution and the Program if, at the time the Contribution is added by the Contributor, 
such addition of the Contribution causes such combination to be covered by the Licensed Patents. The patent license 
shall not apply to any other combinations which include the Contribution. No hardware per se is licensed hereunder.
c) Recipient understands that although each Contributor grants the licenses to its Contributions set forth herein, 
no assurances are provided by any Contributor that the Program does not infringe the patent or other intellectual 
property rights of any other entity. Each Contributor disclaims any liability to Recipient for claims brought by any 
other entity based on infringement of intellectual property rights or otherwise. As a condition to exercising the rights 
and licenses granted hereunder, each Recipient hereby assumes sole responsibility to secure any other intellectual 
property rights needed, if any. For example, if a third party patent license is required to allow Recipient to distribute
 the Program, it is Recipient&amp;apos;s responsibility to acquire that license before distributing the Program.
d) Each Contributor represents that to its knowledge it has sufficient copyright rights in its Contribution, if any, 
to grant the copyright license set forth in this Agreement.
3. REQUIREMENTS
A Contributor may choose to distribute the Program in object code form under its own license agreement, provided that:
a) it complies with the terms and conditions of this Agreement; and
b) its license agreement:
i) effectively disclaims on behalf of all Contributors all warranties and conditions, express and implied, including
 warranties or conditions of title and non-infringement, and implied warranties or conditions of merchantability and 
fitness for a particular purpose;
ii) effectively excludes on behalf of all Contributors all liability for damages, including direct, indirect, special,
 incidental and consequential damages, such as lost profits;
iii) states that any provisions which differ from this Agreement are offered by that Contributor alone and not by any
 other party; and
iv) states that source code for the Program is available from such Contributor, and informs licensees how to obtain it 
in a reasonable manner on or through a medium customarily used for software exchange.
When the Program is made available in source code form:
a) it must be made available under this Agreement; and
b) a copy of this Agreement must be included with each copy of the Program.
Contributors may not remove or alter any copyright notices contained within the Program.
Each Contributor must identify itself as the originator of its Contribution, if any, in a manner that reasonably allows 
subsequent Recipients to identify the originator of the Contribution.
4. COMMERCIAL DISTRIBUTION
Commercial distributors of software may accept certain responsibilities with respect to end users, business partners and 
the like. While this license is intended to facilitate the commercial use of the Program, the Contributor who includes 
the Program in a commercial product offering should do so in a manner which does not create potential liability for other 
Contributors. Therefore, if a Contributor includes the Program in a commercial product offering, such Contributor 
(&amp;quot;Commercial Contributor&amp;quot;) hereby agrees to defend and indemnify every other Contributor (&amp;quot;Indemnified Contributor&amp;quot;) 
against any losses, damages and costs (collectively &amp;quot;Losses&amp;quot;) arising from claims, lawsuits and other legal actions 
brought by a third party against the Indemnified Contributor to the extent caused by the acts or omissions of such 
Commercial Contributor in connection with its distribution of the Program in a commercial product offering. 
The obligations in this section do not apply to any claims or Losses relating to any actual or alleged intellectual 
property infringement. In order to qualify, an Indemnified Contributor must: a) promptly notify the Commercial Contributor 
in writing of such claim, and b) allow the Commercial Contributor to control, and cooperate with the Commercial Contributor in, 
the defense and any related settlement negotiations. The Indemnified Contributor may participate in any such claim at its 
own expense.
For example, a Contributor might include the Program in a commercial product offering, Product X. That Contributor is then 
a Commercial Contributor. If that Commercial Contributor then makes performance claims, or offers warranties related to 
Product X, those performance claims and warranties are such Commercial Contributor&amp;apos;s responsibility alone. Under this section, 
the Commercial Contributor would have to defend claims against the other Contributors related to those performance claims and 
warranties, and if a court requires any other Contributor to pay any damages as a result, the Commercial Contributor must pay 
those damages.
5. NO WARRANTY
EXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, THE PROGRAM IS PROVIDED ON AN &amp;quot;AS IS&amp;quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS 
OF ANY KIND, EITHER EXPRESS OR IMPLIED INCLUDING, WITHOUT LIMITATION, ANY WARRANTIES OR CONDITIONS OF TITLE, NON-INFRINGEMENT, 
MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. Each Recipient is solely responsible for determining the appropriateness 
of using and distributing the Program and assumes all risks associated with its exercise of rights under this Agreement , 
including but not limited to the risks and costs of program errors, compliance with applicable laws, damage to or loss of data, 
programs or equipment, and unavailability or interruption of operations.
6. DISCLAIMER OF LIABILITY
EXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, NEITHER RECIPIENT NOR ANY CONTRIBUTORS SHALL HAVE ANY LIABILITY FOR ANY 
DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING WITHOUT LIMITATION LOST PROFITS), 
HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR 
OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OR DISTRIBUTION OF THE PROGRAM OR THE EXERCISE OF ANY RIGHTS GRANTED HEREUNDER, 
EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
7. GENERAL
If any provision of this Agreement is invalid or unenforceable under applicable law, it shall not affect the validity or 
enforceability of the remainder of the terms of this Agreement, and without further action by the parties hereto, such 
provision shall be reformed to the minimum extent necessary to make such provision valid and enforceable.
If Recipient institutes patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging 
that the Program itself (excluding combinations of the Program with other software or hardware) infringes such Recipient&amp;apos;s 
patent(s), then such Recipient&amp;apos;s rights granted under Section 2(b) shall terminate as of the date such litigation is filed.
All Recipient&amp;apos;s rights under this Agreement shall terminate if it fails to comply with any of the material terms or conditions 
of this Agreement and does not cure such failure in a reasonable period of time after becoming aware of such noncompliance. 
If all Recipient&amp;apos;s rights under this Agreement terminate, Recipient agrees to cease use and distribution of the Program as 
soon as reasonably practicable. However, Recipient&amp;apos;s obligations under this Agreement and any licenses granted by Recipient 
relating to the Program shall continue and survive.
Everyone is permitted to copy and distribute copies of this Agreement, but in order to avoid inconsistency the Agreement 
is copyrighted and may only be modified in the following manner. The Agreement Steward reserves the right to publish new 
versions (including revisions) of this Agreement from time to time. No one other than the Agreement Steward has the right to
modify this Agreement. The Eclipse Foundation is the initial Agreement Steward. The Eclipse Foundation may assign the responsibility 
to serve as the Agreement Steward to a suitable separate entity. Each new version of the Agreement will be given a distinguishing 
version number. The Program (including Contributions) may always be distributed subject to the version of the Agreement under which 
it was received. In addition, after a new version of the Agreement is published, Contributor may elect to distribute the Program 
(including its Contributions) under the new version. Except as expressly stated in Sections 2(a) and 2(b) above, Recipient receives
 no rights or licenses to the intellectual property of any Contributor under this Agreement, whether expressly, by implication, 
estoppel or otherwise. All rights in the Program not expressly granted under this Agreement are reserved.
This Agreement is governed by the laws of the State of New York and the intellectual property laws of the United States of 
America. No party to this Agreement will bring a legal action under this Agreement more than one year after the cause of action arose. Each party waives its rights to a jury trial in any resulting litigation.
   </license>

   <plugin
         id="org.polarsys.chess.chessmlprofile"
         download-size="996"
         install-size="4764"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.contracts.profile"
         download-size="172"
         install-size="631"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.diagram.ui"
         download-size="36"
         install-size="81"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.diagramsCreator"
         download-size="93"
         install-size="205"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.functionBehaviors.functionBehaviorEditor"
         download-size="279"
         install-size="980"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.validator"
         download-size="168"
         install-size="374"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.wizards"
         download-size="19"
         install-size="36"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.checkers"
         download-size="45"
         install-size="88"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.OSSImporter"
         download-size="45"
         install-size="115"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.cleanCExporter"
         download-size="8"
         install-size="13"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.codegen.ada"
         download-size="107"
         install-size="322"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.commands"
         download-size="26"
         install-size="59"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.constraints.constraintEditor"
         download-size="6"
         install-size="9"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.contracts.chessextension"
         download-size="49"
         install-size="101"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.contracts.contractEditor"
         download-size="26"
         install-size="55"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.contracts.contractPropertyManager"
         download-size="13"
         install-size="20"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.contracts.hierarchicalContractView"
         download-size="13"
         install-size="20"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.contracts.integration"
         download-size="13"
         install-size="19"
         version="0.0.0"/>

   <plugin
         id="org.polarsys.chess.contracts.refinementView"
         download-size="13"
         install-size="20"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.contracts.safetyAnalysis"
         download-size="8"
         install-size="16"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.contracts.transformations"
         download-size="186"
         install-size="1610"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.contracts.validation"
         download-size="15"
         install-size="28"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.contracts.verificationService"
         download-size="37"
         install-size="93"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.discovery"
         download-size="9"
         install-size="11"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.m2m"
         download-size="143"
         install-size="441"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.multicore"
         download-size="94"
         install-size="215"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.paramArchConfigurator"
         download-size="225"
         install-size="286"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.patterns"
         download-size="41"
         install-size="80"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.patterns.library"
         download-size="78"
         install-size="189"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.patterns.profile"
         download-size="51"
         install-size="197"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.properties.propertyEditor"
         download-size="6"
         install-size="9"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.smvExporter"
         download-size="13"
         install-size="24"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.statebased"
         download-size="232"
         install-size="1559"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.tradeoffAnalysis"
         download-size="23"
         install-size="45"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.mainmenu"
         download-size="3"
         install-size="5"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.mobius"
         download-size="82"
         install-size="268"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.mobius.model"
         download-size="69"
         install-size="165"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.mobius.model.edit"
         download-size="57"
         install-size="101"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.mobius.model.editor"
         download-size="66"
         install-size="126"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.mobius.preferences"
         download-size="4"
         install-size="3"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.tabbedproperties"
         download-size="166"
         install-size="750"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.fla"
         download-size="0"
         install-size="0"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.fla.FPTC2FLABehavior"
         download-size="0"
         install-size="0"
         version="0.0.0"/>

   <plugin
         id="org.polarsys.chess.fla.faultTreeAnalysis"
         download-size="0"
         install-size="0"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.fla.faultTreeGenerator"
         download-size="0"
         install-size="0"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.fla.flamm"
         download-size="0"
         install-size="0"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.fla.flaxml"
         download-size="0"
         install-size="0"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.fla.transformations"
         download-size="0"
         install-size="0"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.iot.extension"
         download-size="0"
         install-size="0"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.iot.generator"
         download-size="0"
         install-size="0"
         version="0.0.0"/>

   <plugin
         id="org.polarsys.chess.iot.generator.ui"
         download-size="0"
         install-size="0"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.mbsanice.analysis"
         download-size="0"
         install-size="0"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.mbsanice.fmea"
         download-size="0"
         install-size="0"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.service"
         download-size="0"
         install-size="0"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.xtext.fladsl"
         download-size="0"
         install-size="0"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.xtext.fladsl.ide"
         download-size="0"
         install-size="0"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.xtext.fladsl.ui"
         download-size="0"
         install-size="0"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.xtext.global"
         download-size="0"
         install-size="0"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.core"
         download-size="0"
         install-size="0"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.iot.profile"
         download-size="0"
         install-size="0"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.iot.deployment.generator"
         download-size="0"
         install-size="0"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.iot.deployment.util"
         download-size="0"
         install-size="0"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.iot.dsl"
         download-size="0"
         install-size="0"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.iot.dsl.ide"
         download-size="0"
         install-size="0"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.iot.dsl.tests"
         download-size="0"
         install-size="0"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.iot.dsl.ui"
         download-size="0"
         install-size="0"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.iot.dsl.ui.tests"
         download-size="0"
         install-size="0"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.iot.runtimedsl"
         download-size="0"
         install-size="0"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.iot.runtimedsl.ide"
         download-size="0"
         install-size="0"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.iot.runtimedsl.tests"
         download-size="0"
         install-size="0"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.iot.runtimedsl.ui"
         download-size="0"
         install-size="0"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.iot.runtimedsl.ui.tests"
         download-size="0"
         install-size="0"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.monitoring"
         download-size="0"
         install-size="0"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.eclipse.ui.monitoring"
         download-size="0"
         install-size="0"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.iot.deployment.editor"
         download-size="0"
         install-size="0"
         version="0.0.0"
         unpack="false"/>

   <plugin
         id="org.polarsys.chess.iot.software.generator"
         download-size="0"
         install-size="0"
         version="0.0.0"/>

   <plugin
         id="org.polarsys.chess.iot.software.generator.ui"
         download-size="0"
         install-size="0"
         version="0.0.0"
         unpack="false"/>

</feature>
