/*
 * generated by Xtext 2.12.0
 */
grammar InternalRuntimeDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.polarsys.chess.iot.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.polarsys.chess.iot.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.polarsys.chess.iot.services.RuntimeDslGrammarAccess;

}
@parser::members {
	private RuntimeDslGrammarAccess grammarAccess;

	public void setGrammarAccess(RuntimeDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleDeployment
entryRuleDeployment
:
{ before(grammarAccess.getDeploymentRule()); }
	 ruleDeployment
{ after(grammarAccess.getDeploymentRule()); } 
	 EOF 
;

// Rule Deployment
ruleDeployment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeploymentAccess().getPlanAssignment()); }
		(rule__Deployment__PlanAssignment)*
		{ after(grammarAccess.getDeploymentAccess().getPlanAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getGroup()); }
		(rule__Expression__Group__0)
		{ after(grammarAccess.getExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbstractAgent
entryRuleAbstractAgent
:
{ before(grammarAccess.getAbstractAgentRule()); }
	 ruleAbstractAgent
{ after(grammarAccess.getAbstractAgentRule()); } 
	 EOF 
;

// Rule AbstractAgent
ruleAbstractAgent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstractAgentAccess().getGroup()); }
		(rule__AbstractAgent__Group__0)
		{ after(grammarAccess.getAbstractAgentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulerule
entryRulerule
:
{ before(grammarAccess.getRuleRule()); }
	 rulerule
{ after(grammarAccess.getRuleRule()); } 
	 EOF 
;

// Rule rule
rulerule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRuleAccess().getAlternatives()); }
		(rule__Rule__Alternatives)
		{ after(grammarAccess.getRuleAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulecreate
entryRulecreate
:
{ before(grammarAccess.getCreateRule()); }
	 rulecreate
{ after(grammarAccess.getCreateRule()); } 
	 EOF 
;

// Rule create
rulecreate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCreateAccess().getGroup()); }
		(rule__Create__Group__0)
		{ after(grammarAccess.getCreateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestart
entryRulestart
:
{ before(grammarAccess.getStartRule()); }
	 rulestart
{ after(grammarAccess.getStartRule()); } 
	 EOF 
;

// Rule start
rulestart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStartAccess().getGroup()); }
		(rule__Start__Group__0)
		{ after(grammarAccess.getStartAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestop
entryRulestop
:
{ before(grammarAccess.getStopRule()); }
	 rulestop
{ after(grammarAccess.getStopRule()); } 
	 EOF 
;

// Rule stop
rulestop 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStopAccess().getGroup()); }
		(rule__Stop__Group__0)
		{ after(grammarAccess.getStopAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulerestart
entryRulerestart
:
{ before(grammarAccess.getRestartRule()); }
	 rulerestart
{ after(grammarAccess.getRestartRule()); } 
	 EOF 
;

// Rule restart
rulerestart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRestartAccess().getGroup()); }
		(rule__Restart__Group__0)
		{ after(grammarAccess.getRestartAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleredeploy
entryRuleredeploy
:
{ before(grammarAccess.getRedeployRule()); }
	 ruleredeploy
{ after(grammarAccess.getRedeployRule()); } 
	 EOF 
;

// Rule redeploy
ruleredeploy 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRedeployAccess().getGroup()); }
		(rule__Redeploy__Group__0)
		{ after(grammarAccess.getRedeployAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulelog
entryRulelog
:
{ before(grammarAccess.getLogRule()); }
	 rulelog
{ after(grammarAccess.getLogRule()); } 
	 EOF 
;

// Rule log
rulelog 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogAccess().getGroup()); }
		(rule__Log__Group__0)
		{ after(grammarAccess.getLogAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulererunAgent
entryRulererunAgent
:
{ before(grammarAccess.getRerunAgentRule()); }
	 rulererunAgent
{ after(grammarAccess.getRerunAgentRule()); } 
	 EOF 
;

// Rule rerunAgent
rulererunAgent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRerunAgentAccess().getGroup()); }
		(rule__RerunAgent__Group__0)
		{ after(grammarAccess.getRerunAgentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule LogType
ruleLogType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogTypeAccess().getAlternatives()); }
		(rule__LogType__Alternatives)
		{ after(grammarAccess.getLogTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule BOOLEAN
ruleBOOLEAN
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBOOLEANAccess().getAlternatives()); }
		(rule__BOOLEAN__Alternatives)
		{ after(grammarAccess.getBOOLEANAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getCreateParserRuleCall_0()); }
		rulecreate
		{ after(grammarAccess.getRuleAccess().getCreateParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getRuleAccess().getStartParserRuleCall_1()); }
		rulestart
		{ after(grammarAccess.getRuleAccess().getStartParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getRuleAccess().getStopParserRuleCall_2()); }
		rulestop
		{ after(grammarAccess.getRuleAccess().getStopParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getRuleAccess().getRestartParserRuleCall_3()); }
		rulerestart
		{ after(grammarAccess.getRuleAccess().getRestartParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getRuleAccess().getRedeployParserRuleCall_4()); }
		ruleredeploy
		{ after(grammarAccess.getRuleAccess().getRedeployParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getRuleAccess().getLogParserRuleCall_5()); }
		rulelog
		{ after(grammarAccess.getRuleAccess().getLogParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getRuleAccess().getRerunAgentParserRuleCall_6()); }
		rulererunAgent
		{ after(grammarAccess.getRuleAccess().getRerunAgentParserRuleCall_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogTypeAccess().getMACHINEEnumLiteralDeclaration_0()); }
		('machine')
		{ after(grammarAccess.getLogTypeAccess().getMACHINEEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getLogTypeAccess().getSERVICEEnumLiteralDeclaration_1()); }
		('service')
		{ after(grammarAccess.getLogTypeAccess().getSERVICEEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BOOLEAN__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBOOLEANAccess().getTRUEEnumLiteralDeclaration_0()); }
		('true')
		{ after(grammarAccess.getBOOLEANAccess().getTRUEEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getBOOLEANAccess().getFALSEEnumLiteralDeclaration_1()); }
		('false')
		{ after(grammarAccess.getBOOLEANAccess().getFALSEEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__0__Impl
	rule__Expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getDepPlanKeyword_0()); }
	'DepPlan:'
	{ after(grammarAccess.getExpressionAccess().getDepPlanKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__1__Impl
	rule__Expression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getNameAssignment_1()); }
	(rule__Expression__NameAssignment_1)
	{ after(grammarAccess.getExpressionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__2__Impl
	rule__Expression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getExpressionAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__3__Impl
	rule__Expression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getGroup_3()); }
	(rule__Expression__Group_3__0)?
	{ after(grammarAccess.getExpressionAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__4__Impl
	rule__Expression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getGroup_4()); }
	(rule__Expression__Group_4__0)?
	{ after(grammarAccess.getExpressionAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__5__Impl
	rule__Expression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getDescriptionKeyword_5()); }
	'Description:'
	{ after(grammarAccess.getExpressionAccess().getDescriptionKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__6__Impl
	rule__Expression__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getDescriptionAssignment_6()); }
	(rule__Expression__DescriptionAssignment_6)
	{ after(grammarAccess.getExpressionAccess().getDescriptionAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__7__Impl
	rule__Expression__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getAgentAssignment_7()); }
	(rule__Expression__AgentAssignment_7)*
	{ after(grammarAccess.getExpressionAccess().getAgentAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getRightCurlyBracketKeyword_8()); }
	'}'
	{ after(grammarAccess.getExpressionAccess().getRightCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_3__0__Impl
	rule__Expression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getSetupKeyword_3_0()); }
	'setup:'
	{ after(grammarAccess.getExpressionAccess().getSetupKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getSetupAssignment_3_1()); }
	(rule__Expression__SetupAssignment_3_1)
	{ after(grammarAccess.getExpressionAccess().getSetupAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_4__0__Impl
	rule__Expression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getReUsePlanKeyword_4_0()); }
	're-use-plan:'
	{ after(grammarAccess.getExpressionAccess().getReUsePlanKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getPlanAssignment_4_1()); }
	(rule__Expression__PlanAssignment_4_1)
	{ after(grammarAccess.getExpressionAccess().getPlanAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractAgent__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractAgent__Group__0__Impl
	rule__AbstractAgent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractAgent__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractAgentAccess().getAgentKeyword_0()); }
	'agent:'
	{ after(grammarAccess.getAbstractAgentAccess().getAgentKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractAgent__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractAgent__Group__1__Impl
	rule__AbstractAgent__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractAgent__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractAgentAccess().getNameAssignment_1()); }
	(rule__AbstractAgent__NameAssignment_1)
	{ after(grammarAccess.getAbstractAgentAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractAgent__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractAgent__Group__2__Impl
	rule__AbstractAgent__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractAgent__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractAgentAccess().getGroup_2()); }
	(rule__AbstractAgent__Group_2__0)?
	{ after(grammarAccess.getAbstractAgentAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractAgent__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractAgent__Group__3__Impl
	rule__AbstractAgent__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractAgent__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractAgentAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getAbstractAgentAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractAgent__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractAgent__Group__4__Impl
	rule__AbstractAgent__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractAgent__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractAgentAccess().getGroup_4()); }
	(rule__AbstractAgent__Group_4__0)*
	{ after(grammarAccess.getAbstractAgentAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractAgent__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractAgent__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractAgent__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractAgentAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getAbstractAgentAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractAgent__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractAgent__Group_2__0__Impl
	rule__AbstractAgent__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractAgent__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractAgentAccess().getExtendsKeyword_2_0()); }
	'extends'
	{ after(grammarAccess.getAbstractAgentAccess().getExtendsKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractAgent__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractAgent__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractAgent__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractAgentAccess().getSuperTypeAssignment_2_1()); }
	(rule__AbstractAgent__SuperTypeAssignment_2_1)
	{ after(grammarAccess.getAbstractAgentAccess().getSuperTypeAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractAgent__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractAgent__Group_4__0__Impl
	rule__AbstractAgent__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractAgent__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractAgentAccess().getRULEKeyword_4_0()); }
	'RULE:'
	{ after(grammarAccess.getAbstractAgentAccess().getRULEKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractAgent__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractAgent__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractAgent__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractAgentAccess().getRuleAssignment_4_1()); }
	(rule__AbstractAgent__RuleAssignment_4_1)
	{ after(grammarAccess.getAbstractAgentAccess().getRuleAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Create__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Create__Group__0__Impl
	rule__Create__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Create__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateAccess().getCreateKeyword_0()); }
	'create'
	{ after(grammarAccess.getCreateAccess().getCreateKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Create__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Create__Group__1__Impl
	rule__Create__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Create__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateAccess().getEqualsSignGreaterThanSignKeyword_1()); }
	'=>'
	{ after(grammarAccess.getCreateAccess().getEqualsSignGreaterThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Create__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Create__Group__2__Impl
	rule__Create__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Create__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateAccess().getService_nameAssignment_2()); }
	(rule__Create__Service_nameAssignment_2)
	{ after(grammarAccess.getCreateAccess().getService_nameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Create__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Create__Group__3__Impl
	rule__Create__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Create__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateAccess().getOnKeyword_3()); }
	'on:'
	{ after(grammarAccess.getCreateAccess().getOnKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Create__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Create__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Create__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateAccess().getMachine_nameAssignment_4()); }
	(rule__Create__Machine_nameAssignment_4)
	{ after(grammarAccess.getCreateAccess().getMachine_nameAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Start__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Start__Group__0__Impl
	rule__Start__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Start__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartAccess().getStartKeyword_0()); }
	'start'
	{ after(grammarAccess.getStartAccess().getStartKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Start__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Start__Group__1__Impl
	rule__Start__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Start__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartAccess().getEqualsSignGreaterThanSignKeyword_1()); }
	'=>'
	{ after(grammarAccess.getStartAccess().getEqualsSignGreaterThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Start__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Start__Group__2__Impl
	rule__Start__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Start__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartAccess().getService_nameAssignment_2()); }
	(rule__Start__Service_nameAssignment_2)
	{ after(grammarAccess.getStartAccess().getService_nameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Start__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Start__Group__3__Impl
	rule__Start__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Start__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartAccess().getOnKeyword_3()); }
	'on:'
	{ after(grammarAccess.getStartAccess().getOnKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Start__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Start__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Start__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartAccess().getMachine_nameAssignment_4()); }
	(rule__Start__Machine_nameAssignment_4)
	{ after(grammarAccess.getStartAccess().getMachine_nameAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Stop__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stop__Group__0__Impl
	rule__Stop__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Stop__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStopAccess().getStopKeyword_0()); }
	'stop'
	{ after(grammarAccess.getStopAccess().getStopKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stop__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stop__Group__1__Impl
	rule__Stop__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Stop__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStopAccess().getEqualsSignGreaterThanSignKeyword_1()); }
	'=>'
	{ after(grammarAccess.getStopAccess().getEqualsSignGreaterThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stop__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stop__Group__2__Impl
	rule__Stop__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Stop__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStopAccess().getService_nameAssignment_2()); }
	(rule__Stop__Service_nameAssignment_2)
	{ after(grammarAccess.getStopAccess().getService_nameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stop__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stop__Group__3__Impl
	rule__Stop__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Stop__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStopAccess().getOnKeyword_3()); }
	'on:'
	{ after(grammarAccess.getStopAccess().getOnKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stop__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stop__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Stop__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStopAccess().getMachine_nameAssignment_4()); }
	(rule__Stop__Machine_nameAssignment_4)
	{ after(grammarAccess.getStopAccess().getMachine_nameAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Restart__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Restart__Group__0__Impl
	rule__Restart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Restart__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestartAccess().getReStartKeyword_0()); }
	're-start'
	{ after(grammarAccess.getRestartAccess().getReStartKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Restart__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Restart__Group__1__Impl
	rule__Restart__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Restart__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestartAccess().getEqualsSignGreaterThanSignKeyword_1()); }
	'=>'
	{ after(grammarAccess.getRestartAccess().getEqualsSignGreaterThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Restart__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Restart__Group__2__Impl
	rule__Restart__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Restart__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestartAccess().getService_nameAssignment_2()); }
	(rule__Restart__Service_nameAssignment_2)
	{ after(grammarAccess.getRestartAccess().getService_nameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Restart__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Restart__Group__3__Impl
	rule__Restart__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Restart__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestartAccess().getOnKeyword_3()); }
	'on:'
	{ after(grammarAccess.getRestartAccess().getOnKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Restart__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Restart__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Restart__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestartAccess().getMachine_nameAssignment_4()); }
	(rule__Restart__Machine_nameAssignment_4)
	{ after(grammarAccess.getRestartAccess().getMachine_nameAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Redeploy__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Redeploy__Group__0__Impl
	rule__Redeploy__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Redeploy__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRedeployAccess().getReDeployKeyword_0()); }
	're-deploy'
	{ after(grammarAccess.getRedeployAccess().getReDeployKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Redeploy__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Redeploy__Group__1__Impl
	rule__Redeploy__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Redeploy__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRedeployAccess().getEqualsSignGreaterThanSignKeyword_1()); }
	'=>'
	{ after(grammarAccess.getRedeployAccess().getEqualsSignGreaterThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Redeploy__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Redeploy__Group__2__Impl
	rule__Redeploy__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Redeploy__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRedeployAccess().getService_nameAssignment_2()); }
	(rule__Redeploy__Service_nameAssignment_2)
	{ after(grammarAccess.getRedeployAccess().getService_nameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Redeploy__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Redeploy__Group__3__Impl
	rule__Redeploy__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Redeploy__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRedeployAccess().getOnKeyword_3()); }
	'on:'
	{ after(grammarAccess.getRedeployAccess().getOnKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Redeploy__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Redeploy__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Redeploy__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRedeployAccess().getMachine_addressAssignment_4()); }
	(rule__Redeploy__Machine_addressAssignment_4)
	{ after(grammarAccess.getRedeployAccess().getMachine_addressAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Log__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Log__Group__0__Impl
	rule__Log__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Log__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogAccess().getLogKeyword_0()); }
	'log'
	{ after(grammarAccess.getLogAccess().getLogKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Log__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Log__Group__1__Impl
	rule__Log__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Log__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogAccess().getEqualsSignGreaterThanSignKeyword_1()); }
	'=>'
	{ after(grammarAccess.getLogAccess().getEqualsSignGreaterThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Log__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Log__Group__2__Impl
	rule__Log__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Log__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogAccess().getService_nameAssignment_2()); }
	(rule__Log__Service_nameAssignment_2)
	{ after(grammarAccess.getLogAccess().getService_nameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Log__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Log__Group__3__Impl
	rule__Log__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Log__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogAccess().getLog_typeKeyword_3()); }
	'log_type:'
	{ after(grammarAccess.getLogAccess().getLog_typeKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Log__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Log__Group__4__Impl
	rule__Log__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Log__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogAccess().getLog_typeAssignment_4()); }
	(rule__Log__Log_typeAssignment_4)
	{ after(grammarAccess.getLogAccess().getLog_typeAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Log__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Log__Group__5__Impl
	rule__Log__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Log__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogAccess().getFilenameKeyword_5()); }
	'filename:'
	{ after(grammarAccess.getLogAccess().getFilenameKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Log__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Log__Group__6__Impl
	rule__Log__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Log__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogAccess().getFilenameAssignment_6()); }
	(rule__Log__FilenameAssignment_6)
	{ after(grammarAccess.getLogAccess().getFilenameAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Log__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Log__Group__7__Impl
	rule__Log__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Log__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogAccess().getLocationKeyword_7()); }
	'location:'
	{ after(grammarAccess.getLogAccess().getLocationKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Log__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Log__Group__8__Impl
	rule__Log__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Log__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogAccess().getLocationAssignment_8()); }
	(rule__Log__LocationAssignment_8)
	{ after(grammarAccess.getLogAccess().getLocationAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Log__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Log__Group__9__Impl
	rule__Log__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Log__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogAccess().getOnKeyword_9()); }
	'on:'
	{ after(grammarAccess.getLogAccess().getOnKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Log__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Log__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Log__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogAccess().getMachine_nameAssignment_10()); }
	(rule__Log__Machine_nameAssignment_10)
	{ after(grammarAccess.getLogAccess().getMachine_nameAssignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RerunAgent__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RerunAgent__Group__0__Impl
	rule__RerunAgent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RerunAgent__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRerunAgentAccess().getRerunAgentKeyword_0()); }
	'rerun-agent'
	{ after(grammarAccess.getRerunAgentAccess().getRerunAgentKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RerunAgent__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RerunAgent__Group__1__Impl
	rule__RerunAgent__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RerunAgent__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRerunAgentAccess().getEqualsSignGreaterThanSignKeyword_1()); }
	'=>'
	{ after(grammarAccess.getRerunAgentAccess().getEqualsSignGreaterThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RerunAgent__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RerunAgent__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RerunAgent__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRerunAgentAccess().getAgentAssignment_2()); }
	(rule__RerunAgent__AgentAssignment_2)
	{ after(grammarAccess.getRerunAgentAccess().getAgentAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Deployment__PlanAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeploymentAccess().getPlanExpressionParserRuleCall_0()); }
		ruleExpression
		{ after(grammarAccess.getDeploymentAccess().getPlanExpressionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getExpressionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__SetupAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getSetupBOOLEANEnumRuleCall_3_1_0()); }
		ruleBOOLEAN
		{ after(grammarAccess.getExpressionAccess().getSetupBOOLEANEnumRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__PlanAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getPlanExpressionCrossReference_4_1_0()); }
		(
			{ before(grammarAccess.getExpressionAccess().getPlanExpressionIDTerminalRuleCall_4_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getExpressionAccess().getPlanExpressionIDTerminalRuleCall_4_1_0_1()); }
		)
		{ after(grammarAccess.getExpressionAccess().getPlanExpressionCrossReference_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__DescriptionAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getDescriptionSTRINGTerminalRuleCall_6_0()); }
		RULE_STRING
		{ after(grammarAccess.getExpressionAccess().getDescriptionSTRINGTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__AgentAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getAgentAbstractAgentParserRuleCall_7_0()); }
		ruleAbstractAgent
		{ after(grammarAccess.getExpressionAccess().getAgentAbstractAgentParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractAgent__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractAgentAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getAbstractAgentAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractAgent__SuperTypeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractAgentAccess().getSuperTypeAbstractAgentCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getAbstractAgentAccess().getSuperTypeAbstractAgentIDTerminalRuleCall_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAbstractAgentAccess().getSuperTypeAbstractAgentIDTerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getAbstractAgentAccess().getSuperTypeAbstractAgentCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractAgent__RuleAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractAgentAccess().getRuleRuleParserRuleCall_4_1_0()); }
		rulerule
		{ after(grammarAccess.getAbstractAgentAccess().getRuleRuleParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Create__Service_nameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateAccess().getService_nameSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getCreateAccess().getService_nameSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Create__Machine_nameAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateAccess().getMachine_nameSTRINGTerminalRuleCall_4_0()); }
		RULE_STRING
		{ after(grammarAccess.getCreateAccess().getMachine_nameSTRINGTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Start__Service_nameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStartAccess().getService_nameSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getStartAccess().getService_nameSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Start__Machine_nameAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStartAccess().getMachine_nameSTRINGTerminalRuleCall_4_0()); }
		RULE_STRING
		{ after(grammarAccess.getStartAccess().getMachine_nameSTRINGTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stop__Service_nameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStopAccess().getService_nameSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getStopAccess().getService_nameSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stop__Machine_nameAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStopAccess().getMachine_nameSTRINGTerminalRuleCall_4_0()); }
		RULE_STRING
		{ after(grammarAccess.getStopAccess().getMachine_nameSTRINGTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Restart__Service_nameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRestartAccess().getService_nameSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getRestartAccess().getService_nameSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Restart__Machine_nameAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRestartAccess().getMachine_nameSTRINGTerminalRuleCall_4_0()); }
		RULE_STRING
		{ after(grammarAccess.getRestartAccess().getMachine_nameSTRINGTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Redeploy__Service_nameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRedeployAccess().getService_nameSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getRedeployAccess().getService_nameSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Redeploy__Machine_addressAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRedeployAccess().getMachine_addressSTRINGTerminalRuleCall_4_0()); }
		RULE_STRING
		{ after(grammarAccess.getRedeployAccess().getMachine_addressSTRINGTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Log__Service_nameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogAccess().getService_nameSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getLogAccess().getService_nameSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Log__Log_typeAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogAccess().getLog_typeLogTypeEnumRuleCall_4_0()); }
		ruleLogType
		{ after(grammarAccess.getLogAccess().getLog_typeLogTypeEnumRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Log__FilenameAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogAccess().getFilenameSTRINGTerminalRuleCall_6_0()); }
		RULE_STRING
		{ after(grammarAccess.getLogAccess().getFilenameSTRINGTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Log__LocationAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogAccess().getLocationSTRINGTerminalRuleCall_8_0()); }
		RULE_STRING
		{ after(grammarAccess.getLogAccess().getLocationSTRINGTerminalRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Log__Machine_nameAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogAccess().getMachine_nameSTRINGTerminalRuleCall_10_0()); }
		RULE_STRING
		{ after(grammarAccess.getLogAccess().getMachine_nameSTRINGTerminalRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RerunAgent__AgentAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRerunAgentAccess().getAgentAbstractAgentCrossReference_2_0()); }
		(
			{ before(grammarAccess.getRerunAgentAccess().getAgentAbstractAgentIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRerunAgentAccess().getAgentAbstractAgentIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getRerunAgentAccess().getAgentAbstractAgentCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_NUMBER : ('0'..'9')* ('.' ('0'..'9')+)?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
