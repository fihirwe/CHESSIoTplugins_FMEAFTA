/*
 * generated by Xtext 2.12.0
 */
grammar InternalRuntimeDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.polarsys.chess.iot.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.polarsys.chess.iot.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.polarsys.chess.iot.services.RuntimeDslGrammarAccess;

}
@parser::members {
	private RuntimeDslGrammarAccess grammarAccess;

	public void setGrammarAccess(RuntimeDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModule
entryRuleModule
:
{ before(grammarAccess.getModuleRule()); }
	 ruleModule
{ after(grammarAccess.getModuleRule()); } 
	 EOF 
;

// Rule Module
ruleModule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModuleAccess().getGroup()); }
		(rule__Module__Group__0)
		{ after(grammarAccess.getModuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestart
entryRulestart
:
{ before(grammarAccess.getStartRule()); }
	 rulestart
{ after(grammarAccess.getStartRule()); } 
	 EOF 
;

// Rule start
rulestart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStartAccess().getGroup()); }
		(rule__Start__Group__0)
		{ after(grammarAccess.getStartAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestop
entryRulestop
:
{ before(grammarAccess.getStopRule()); }
	 rulestop
{ after(grammarAccess.getStopRule()); } 
	 EOF 
;

// Rule stop
rulestop 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStopAccess().getGroup()); }
		(rule__Stop__Group__0)
		{ after(grammarAccess.getStopAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulerestart
entryRulerestart
:
{ before(grammarAccess.getRestartRule()); }
	 rulerestart
{ after(grammarAccess.getRestartRule()); } 
	 EOF 
;

// Rule restart
rulerestart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRestartAccess().getGroup()); }
		(rule__Restart__Group__0)
		{ after(grammarAccess.getRestartAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleredeploy
entryRuleredeploy
:
{ before(grammarAccess.getRedeployRule()); }
	 ruleredeploy
{ after(grammarAccess.getRedeployRule()); } 
	 EOF 
;

// Rule redeploy
ruleredeploy 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRedeployAccess().getGroup()); }
		(rule__Redeploy__Group__0)
		{ after(grammarAccess.getRedeployAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulelog
entryRulelog
:
{ before(grammarAccess.getLogRule()); }
	 rulelog
{ after(grammarAccess.getLogRule()); } 
	 EOF 
;

// Rule log
rulelog 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogAccess().getGroup()); }
		(rule__Log__Group__0)
		{ after(grammarAccess.getLogAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulemonitor
entryRulemonitor
:
{ before(grammarAccess.getMonitorRule()); }
	 rulemonitor
{ after(grammarAccess.getMonitorRule()); } 
	 EOF 
;

// Rule monitor
rulemonitor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMonitorAccess().getGroup()); }
		(rule__Monitor__Group__0)
		{ after(grammarAccess.getMonitorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulerun
entryRulerun
:
{ before(grammarAccess.getRunRule()); }
	 rulerun
{ after(grammarAccess.getRunRule()); } 
	 EOF 
;

// Rule run
rulerun 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRunAccess().getGroup()); }
		(rule__Run__Group__0)
		{ after(grammarAccess.getRunAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUses
entryRuleUses
:
{ before(grammarAccess.getUsesRule()); }
	 ruleUses
{ after(grammarAccess.getUsesRule()); } 
	 EOF 
;

// Rule Uses
ruleUses 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUsesAccess().getGroup()); }
		(rule__Uses__Group__0)
		{ after(grammarAccess.getUsesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Alternatives_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleAccess().getActionAssignment_5_0()); }
		(rule__Module__ActionAssignment_5_0)
		{ after(grammarAccess.getModuleAccess().getActionAssignment_5_0()); }
	)
	|
	(
		{ before(grammarAccess.getModuleAccess().getActionAssignment_5_1()); }
		(rule__Module__ActionAssignment_5_1)
		{ after(grammarAccess.getModuleAccess().getActionAssignment_5_1()); }
	)
	|
	(
		{ before(grammarAccess.getModuleAccess().getActionAssignment_5_2()); }
		(rule__Module__ActionAssignment_5_2)
		{ after(grammarAccess.getModuleAccess().getActionAssignment_5_2()); }
	)
	|
	(
		{ before(grammarAccess.getModuleAccess().getActionAssignment_5_3()); }
		(rule__Module__ActionAssignment_5_3)
		{ after(grammarAccess.getModuleAccess().getActionAssignment_5_3()); }
	)
	|
	(
		{ before(grammarAccess.getModuleAccess().getActionAssignment_5_4()); }
		(rule__Module__ActionAssignment_5_4)
		{ after(grammarAccess.getModuleAccess().getActionAssignment_5_4()); }
	)
	|
	(
		{ before(grammarAccess.getModuleAccess().getActionAssignment_5_5()); }
		(rule__Module__ActionAssignment_5_5)
		{ after(grammarAccess.getModuleAccess().getActionAssignment_5_5()); }
	)
	|
	(
		{ before(grammarAccess.getModuleAccess().getActionAssignment_5_6()); }
		(rule__Module__ActionAssignment_5_6)
		{ after(grammarAccess.getModuleAccess().getActionAssignment_5_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getEnvironmentKeyword_0()); }
	'Environment:'
	{ after(grammarAccess.getModelAccess().getEnvironmentKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getNameAssignment_1()); }
	(rule__Model__NameAssignment_1)
	{ after(grammarAccess.getModelAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getModuleAssignment_2()); }
	(rule__Model__ModuleAssignment_2)*
	{ after(grammarAccess.getModelAccess().getModuleAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group__0__Impl
	rule__Module__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getBeginModuleKeyword_0()); }
	'--Begin-Module--'
	{ after(grammarAccess.getModuleAccess().getBeginModuleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group__1__Impl
	rule__Module__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getNameKeyword_1()); }
	'name:'
	{ after(grammarAccess.getModuleAccess().getNameKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group__2__Impl
	rule__Module__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getNameAssignment_2()); }
	(rule__Module__NameAssignment_2)
	{ after(grammarAccess.getModuleAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group__3__Impl
	rule__Module__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getUsesAssignment_3()); }
	(rule__Module__UsesAssignment_3)*
	{ after(grammarAccess.getModuleAccess().getUsesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group__4__Impl
	rule__Module__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getActionKeyword_4()); }
	'action:'
	{ after(grammarAccess.getModuleAccess().getActionKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group__5__Impl
	rule__Module__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getAlternatives_5()); }
	(rule__Module__Alternatives_5)*
	{ after(grammarAccess.getModuleAccess().getAlternatives_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getEndModuleKeyword_6()); }
	'--End-Module--'
	{ after(grammarAccess.getModuleAccess().getEndModuleKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Start__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Start__Group__0__Impl
	rule__Start__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Start__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartAccess().getSTARTServiceKeyword_0()); }
	'START-service'
	{ after(grammarAccess.getStartAccess().getSTARTServiceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Start__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Start__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Start__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartAccess().getNameAssignment_1()); }
	(rule__Start__NameAssignment_1)
	{ after(grammarAccess.getStartAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Stop__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stop__Group__0__Impl
	rule__Stop__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Stop__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStopAccess().getSTOPServiceKeyword_0()); }
	'STOP-service'
	{ after(grammarAccess.getStopAccess().getSTOPServiceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stop__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stop__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Stop__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStopAccess().getNameAssignment_1()); }
	(rule__Stop__NameAssignment_1)
	{ after(grammarAccess.getStopAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Restart__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Restart__Group__0__Impl
	rule__Restart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Restart__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestartAccess().getRESTARTServiceKeyword_0()); }
	'RESTART-service'
	{ after(grammarAccess.getRestartAccess().getRESTARTServiceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Restart__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Restart__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Restart__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestartAccess().getNameAssignment_1()); }
	(rule__Restart__NameAssignment_1)
	{ after(grammarAccess.getRestartAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Redeploy__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Redeploy__Group__0__Impl
	rule__Redeploy__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Redeploy__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRedeployAccess().getREDEPLOYServiceKeyword_0()); }
	'REDEPLOY-service'
	{ after(grammarAccess.getRedeployAccess().getREDEPLOYServiceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Redeploy__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Redeploy__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Redeploy__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRedeployAccess().getNameAssignment_1()); }
	(rule__Redeploy__NameAssignment_1)
	{ after(grammarAccess.getRedeployAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Log__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Log__Group__0__Impl
	rule__Log__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Log__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogAccess().getLOGServiceKeyword_0()); }
	'LOG-service'
	{ after(grammarAccess.getLogAccess().getLOGServiceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Log__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Log__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Log__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogAccess().getNameAssignment_1()); }
	(rule__Log__NameAssignment_1)
	{ after(grammarAccess.getLogAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Monitor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Monitor__Group__0__Impl
	rule__Monitor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Monitor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonitorAccess().getMONITORServiceKeyword_0()); }
	'MONITOR-service'
	{ after(grammarAccess.getMonitorAccess().getMONITORServiceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Monitor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Monitor__Group__1__Impl
	rule__Monitor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Monitor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonitorAccess().getNameAssignment_1()); }
	(rule__Monitor__NameAssignment_1)
	{ after(grammarAccess.getMonitorAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Monitor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Monitor__Group__2__Impl
	rule__Monitor__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Monitor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonitorAccess().getPeriodKeyword_2()); }
	'period:'
	{ after(grammarAccess.getMonitorAccess().getPeriodKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Monitor__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Monitor__Group__3__Impl
	rule__Monitor__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Monitor__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonitorAccess().getValueAssignment_3()); }
	(rule__Monitor__ValueAssignment_3)
	{ after(grammarAccess.getMonitorAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Monitor__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Monitor__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Monitor__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonitorAccess().getMsKeyword_4()); }
	'ms'
	{ after(grammarAccess.getMonitorAccess().getMsKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Run__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Run__Group__0__Impl
	rule__Run__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Run__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRunAccess().getRUNModuleKeyword_0()); }
	'RUN-module'
	{ after(grammarAccess.getRunAccess().getRUNModuleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Run__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Run__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Run__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRunAccess().getModuleAssignment_1()); }
	(rule__Run__ModuleAssignment_1)
	{ after(grammarAccess.getRunAccess().getModuleAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Uses__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Uses__Group__0__Impl
	rule__Uses__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Uses__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUsesAccess().getUseKeyword_0()); }
	'use'
	{ after(grammarAccess.getUsesAccess().getUseKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Uses__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Uses__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Uses__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUsesAccess().getModuleAssignment_1()); }
	(rule__Uses__ModuleAssignment_1)
	{ after(grammarAccess.getUsesAccess().getModuleAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ModuleAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getModuleModuleParserRuleCall_2_0()); }
		ruleModule
		{ after(grammarAccess.getModelAccess().getModuleModuleParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getModuleAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__UsesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleAccess().getUsesUsesParserRuleCall_3_0()); }
		ruleUses
		{ after(grammarAccess.getModuleAccess().getUsesUsesParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__ActionAssignment_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleAccess().getActionStartParserRuleCall_5_0_0()); }
		rulestart
		{ after(grammarAccess.getModuleAccess().getActionStartParserRuleCall_5_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__ActionAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleAccess().getActionStopParserRuleCall_5_1_0()); }
		rulestop
		{ after(grammarAccess.getModuleAccess().getActionStopParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__ActionAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleAccess().getActionRestartParserRuleCall_5_2_0()); }
		rulerestart
		{ after(grammarAccess.getModuleAccess().getActionRestartParserRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__ActionAssignment_5_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleAccess().getActionRedeployParserRuleCall_5_3_0()); }
		ruleredeploy
		{ after(grammarAccess.getModuleAccess().getActionRedeployParserRuleCall_5_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__ActionAssignment_5_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleAccess().getActionLogParserRuleCall_5_4_0()); }
		rulelog
		{ after(grammarAccess.getModuleAccess().getActionLogParserRuleCall_5_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__ActionAssignment_5_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleAccess().getActionMonitorParserRuleCall_5_5_0()); }
		rulemonitor
		{ after(grammarAccess.getModuleAccess().getActionMonitorParserRuleCall_5_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__ActionAssignment_5_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleAccess().getActionRunParserRuleCall_5_6_0()); }
		rulerun
		{ after(grammarAccess.getModuleAccess().getActionRunParserRuleCall_5_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Start__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStartAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getStartAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stop__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStopAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getStopAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Restart__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRestartAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRestartAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Redeploy__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRedeployAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRedeployAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Log__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getLogAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Monitor__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMonitorAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getMonitorAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Monitor__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMonitorAccess().getValueNUMBERTerminalRuleCall_3_0()); }
		RULE_NUMBER
		{ after(grammarAccess.getMonitorAccess().getValueNUMBERTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Run__ModuleAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRunAccess().getModuleModuleCrossReference_1_0()); }
		(
			{ before(grammarAccess.getRunAccess().getModuleModuleIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRunAccess().getModuleModuleIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getRunAccess().getModuleModuleCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Uses__ModuleAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUsesAccess().getModuleModuleCrossReference_1_0()); }
		(
			{ before(grammarAccess.getUsesAccess().getModuleModuleIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getUsesAccess().getModuleModuleIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getUsesAccess().getModuleModuleCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_NUMBER : ('0'..'9')* ('.' ('0'..'9')+)?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
