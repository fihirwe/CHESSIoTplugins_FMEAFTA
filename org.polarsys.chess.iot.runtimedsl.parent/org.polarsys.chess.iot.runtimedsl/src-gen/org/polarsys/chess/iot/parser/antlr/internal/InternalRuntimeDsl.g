/*
 * generated by Xtext 2.12.0
 */
grammar InternalRuntimeDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.polarsys.chess.iot.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.polarsys.chess.iot.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.polarsys.chess.iot.services.RuntimeDslGrammarAccess;

}

@parser::members {

 	private RuntimeDslGrammarAccess grammarAccess;

    public InternalRuntimeDslParser(TokenStream input, RuntimeDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected RuntimeDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Environment:'
		{
			newLeafNode(otherlv_0, grammarAccess.getModelAccess().getEnvironmentKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModelRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getModuleModuleParserRuleCall_2_0());
				}
				lv_module_2_0=ruleModule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"module",
						lv_module_2_0,
						"org.polarsys.chess.iot.RuntimeDsl.Module");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleModule
entryRuleModule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModuleRule()); }
	iv_ruleModule=ruleModule
	{ $current=$iv_ruleModule.current; }
	EOF;

// Rule Module
ruleModule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='--Begin-Module--'
		{
			newLeafNode(otherlv_0, grammarAccess.getModuleAccess().getBeginModuleKeyword_0());
		}
		otherlv_1='name:'
		{
			newLeafNode(otherlv_1, grammarAccess.getModuleAccess().getNameKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getModuleAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModuleRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getModuleAccess().getUsesUsesParserRuleCall_3_0());
				}
				lv_uses_3_0=ruleUses
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModuleRule());
					}
					add(
						$current,
						"uses",
						lv_uses_3_0,
						"org.polarsys.chess.iot.RuntimeDsl.Uses");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='action:'
		{
			newLeafNode(otherlv_4, grammarAccess.getModuleAccess().getActionKeyword_4());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getModuleAccess().getActionStartParserRuleCall_5_0_0());
					}
					lv_action_5_0=rulestart
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModuleRule());
						}
						add(
							$current,
							"action",
							lv_action_5_0,
							"org.polarsys.chess.iot.RuntimeDsl.start");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getModuleAccess().getActionStopParserRuleCall_5_1_0());
					}
					lv_action_6_0=rulestop
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModuleRule());
						}
						add(
							$current,
							"action",
							lv_action_6_0,
							"org.polarsys.chess.iot.RuntimeDsl.stop");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getModuleAccess().getActionRestartParserRuleCall_5_2_0());
					}
					lv_action_7_0=rulerestart
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModuleRule());
						}
						add(
							$current,
							"action",
							lv_action_7_0,
							"org.polarsys.chess.iot.RuntimeDsl.restart");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getModuleAccess().getActionRedeployParserRuleCall_5_3_0());
					}
					lv_action_8_0=ruleredeploy
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModuleRule());
						}
						add(
							$current,
							"action",
							lv_action_8_0,
							"org.polarsys.chess.iot.RuntimeDsl.redeploy");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getModuleAccess().getActionLogParserRuleCall_5_4_0());
					}
					lv_action_9_0=rulelog
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModuleRule());
						}
						add(
							$current,
							"action",
							lv_action_9_0,
							"org.polarsys.chess.iot.RuntimeDsl.log");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getModuleAccess().getActionMonitorParserRuleCall_5_5_0());
					}
					lv_action_10_0=rulemonitor
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModuleRule());
						}
						add(
							$current,
							"action",
							lv_action_10_0,
							"org.polarsys.chess.iot.RuntimeDsl.monitor");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getModuleAccess().getActionRunParserRuleCall_5_6_0());
					}
					lv_action_11_0=rulerun
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModuleRule());
						}
						add(
							$current,
							"action",
							lv_action_11_0,
							"org.polarsys.chess.iot.RuntimeDsl.run");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_12='--End-Module--'
		{
			newLeafNode(otherlv_12, grammarAccess.getModuleAccess().getEndModuleKeyword_6());
		}
	)
;

// Entry rule entryRulestart
entryRulestart returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStartRule()); }
	iv_rulestart=rulestart
	{ $current=$iv_rulestart.current; }
	EOF;

// Rule start
rulestart returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='START-service'
		{
			newLeafNode(otherlv_0, grammarAccess.getStartAccess().getSTARTServiceKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getStartAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStartRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRulestop
entryRulestop returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStopRule()); }
	iv_rulestop=rulestop
	{ $current=$iv_rulestop.current; }
	EOF;

// Rule stop
rulestop returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='STOP-service'
		{
			newLeafNode(otherlv_0, grammarAccess.getStopAccess().getSTOPServiceKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getStopAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStopRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRulerestart
entryRulerestart returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRestartRule()); }
	iv_rulerestart=rulerestart
	{ $current=$iv_rulerestart.current; }
	EOF;

// Rule restart
rulerestart returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='RESTART-service'
		{
			newLeafNode(otherlv_0, grammarAccess.getRestartAccess().getRESTARTServiceKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getRestartAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRestartRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleredeploy
entryRuleredeploy returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRedeployRule()); }
	iv_ruleredeploy=ruleredeploy
	{ $current=$iv_ruleredeploy.current; }
	EOF;

// Rule redeploy
ruleredeploy returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='REDEPLOY-service'
		{
			newLeafNode(otherlv_0, grammarAccess.getRedeployAccess().getREDEPLOYServiceKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getRedeployAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRedeployRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRulelog
entryRulelog returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLogRule()); }
	iv_rulelog=rulelog
	{ $current=$iv_rulelog.current; }
	EOF;

// Rule log
rulelog returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='LOG-service'
		{
			newLeafNode(otherlv_0, grammarAccess.getLogAccess().getLOGServiceKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getLogAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLogRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRulemonitor
entryRulemonitor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMonitorRule()); }
	iv_rulemonitor=rulemonitor
	{ $current=$iv_rulemonitor.current; }
	EOF;

// Rule monitor
rulemonitor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='MONITOR-service'
		{
			newLeafNode(otherlv_0, grammarAccess.getMonitorAccess().getMONITORServiceKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getMonitorAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMonitorRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='period:'
		{
			newLeafNode(otherlv_2, grammarAccess.getMonitorAccess().getPeriodKeyword_2());
		}
		(
			(
				lv_value_3_0=RULE_NUMBER
				{
					newLeafNode(lv_value_3_0, grammarAccess.getMonitorAccess().getValueNUMBERTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMonitorRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_3_0,
						"org.polarsys.chess.iot.RuntimeDsl.NUMBER");
				}
			)
		)
		otherlv_4='ms'
		{
			newLeafNode(otherlv_4, grammarAccess.getMonitorAccess().getMsKeyword_4());
		}
	)
;

// Entry rule entryRulerun
entryRulerun returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRunRule()); }
	iv_rulerun=rulerun
	{ $current=$iv_rulerun.current; }
	EOF;

// Rule run
rulerun returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='RUN-module'
		{
			newLeafNode(otherlv_0, grammarAccess.getRunAccess().getRUNModuleKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRunRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getRunAccess().getModuleModuleCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRuleUses
entryRuleUses returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUsesRule()); }
	iv_ruleUses=ruleUses
	{ $current=$iv_ruleUses.current; }
	EOF;

// Rule Uses
ruleUses returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='use'
		{
			newLeafNode(otherlv_0, grammarAccess.getUsesAccess().getUseKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUsesRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getUsesAccess().getModuleModuleCrossReference_1_0());
				}
			)
		)
	)
;

RULE_NUMBER : ('0'..'9')* ('.' ('0'..'9')+)?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
