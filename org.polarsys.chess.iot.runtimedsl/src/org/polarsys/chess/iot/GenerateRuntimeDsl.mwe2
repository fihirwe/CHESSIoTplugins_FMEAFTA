module org.polarsys.chess.iot.GenerateRuntimeDsl

import org.eclipse.emf.mwe.utils.*
import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*

var rootPath = ".."

Workflow {
	
		bean = StandaloneSetup {
		 scanClassPath = true
		  //load EMF ECORE	
		uriMap = {
            from = "platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore"
            to = "platform:/resource/org.eclipse.emf.ecore/model/Ecore.ecore"
        }
		
		uriMap = { from = "platform:/plugin/org.eclipse.emf.codegen.ecore/model/GenModel.genmodel"
           		   to = "platform:/resource/org.eclipse.emf.codegen.ecore/model/GenModel.genmodel"
       	}
        uriMap = {
          from = "platform:/plugin/org.eclipse.emf.ecore/model/Ecore.genmodel"
           to = "platform:/resource/org.eclipse.emf.ecore/model/Ecore.genmodel"
        }
        registerGeneratedEPackage = "org.eclipse.emf.ecore.EcorePackage"
        registerGeneratedEPackage = "org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage"
        registerGenModelFile = "platform:/resource/org.eclipse.emf.ecore/model/Ecore.genmodel"	
		registerGenModelFile = "platform:/resource/org.eclipse.emf.codegen.ecore/model/GenModel.genmodel"
		
		//load UML
		
		uriMap = {
            from = "platform:/plugin/org.eclipse.uml2.types/model/Types.genmodel"
            to = "platform:/resource/org.eclipse.uml2.types/model/Types.genmodel"
        }
        uriMap = {
            from = "platform:/plugin/org.eclipse.uml2.uml/model/UML.genmodel"
            to = "platform:/resource/org.eclipse.uml2.uml/model/UML.genmodel"
        }
		
 		uriMap = {
            from = "platform:/plugin/org.eclipse.uml2.codegen.ecore/model/GenModel.genmodel"
            to = "platform:/resource/org.eclipse.uml2.codegen.ecore/model/GenModel.genmodel" 
        }
        
        uriMap = {
            from = "platform:/plugin/org.eclipse.uml2.codegen.ecore/model/GenModel.ecore"
            to = "platform:/resource/org.eclipse.uml2.codegen.ecore/model/GenModel.ecore"
        }
        uriMap = {
            from = "platform:/plugin/org.eclipse.uml2.uml/model/UML.ecore"
            to = "platform:/resource/org.eclipse.uml2.uml/model/UML.ecore"
        }
        
        uriMap = {
            from = "platform:/plugin/org.eclipse.uml2.types/model/Types.ecore"
            to = "platform:/resource/org.eclipse.uml2.types/model/Types.ecore"
        }
        
        //Load CHESSIoT
        
        uriMap = {
            from = "platform:/plugin/org.polarsys.chess.iot.profile/CHESSIoT.profile.genmodel"
            to = "platform:/resource/org.polarsys.chess.iot.profile/CHESSIoT.profile.genmodel" 
        }
        
        uriMap = { 
            from = "platform:/plugin/org.polarsys.chess.iot.profile/CHESSIoT.ecore"
            to = "platform:/resource/org.polarsys.chess.iot.profile/CHESSIoT.ecore"
        }
        
        uriMap = { 
            from = "platform:/plugin/org.polarsys.chess.iot.profile/CHESSIoT/CHESSIoTDeployment.ecore"
            to = "platform:/resource/org.polarsys.chess.iot.profile/CHESSIoT/CHESSIoTDeployment.ecore"
        }
        
        registerGeneratedEPackage = "org.eclipse.uml2.types.TypesPackage"
        registerGeneratedEPackage = "org.eclipse.uml2.uml.UMLPackage"
        registerGeneratedEPackage = "org.eclipse.uml2.codegen.ecore.genmodel.GenModelPackage"
        registerGeneratedEPackage = "org.polarsys.chess.iot.profile.CHESSIoT.CHESSIoTDeployment.CHESSIoTDeploymentPackage"
        
        registerGenModelFile = "platform:/resource/org.eclipse.uml2.types/model/Types.genmodel"
	 	registerGenModelFile = "platform:/resource/org.eclipse.uml2.uml/model/UML.genmodel"
        registerGenModelFile = "platform:/resource/org.eclipse.uml2.codegen.ecore/model/GenModel.genmodel"
        registerGenModelFile = "platform:/resource/org.polarsys.chess.iot.profile/CHESSIoT.profile.genmodel"
        
	}
	
	
	component = XtextGenerator {
		configuration = {
			project = StandardProjectConfig {
				baseName = "org.polarsys.chess.iot.runtimedsl"
				rootPath = rootPath
				runtimeTest = {
					enabled = true
				}
				eclipsePlugin = {
					enabled = true
				}
				eclipsePluginTest = {
					enabled = true
				}
				web = {
					enabled = true
				}
				createEclipseMetaData = true
			}
			code = {
				encoding = "windows-1252"
				lineDelimiter = "\r\n"
				fileHeader = "/*\n * generated by Xtext \${version}\n */"
			}
		}
		language = StandardLanguage {
			name = "org.polarsys.chess.iot.RuntimeDsl"
			fileExtensions = "rtm"
			serializer = {
				generateStub = false
			}
			validator = {
				// composedCheck = "org.eclipse.xtext.validation.NamesAreUniqueValidator"
			}
		}
	}
}
