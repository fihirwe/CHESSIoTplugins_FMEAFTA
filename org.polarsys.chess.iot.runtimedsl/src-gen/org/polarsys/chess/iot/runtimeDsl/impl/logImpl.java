/**
 * generated by Xtext 2.12.0
 */
package org.polarsys.chess.iot.runtimeDsl.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.polarsys.chess.iot.runtimeDsl.LogType;
import org.polarsys.chess.iot.runtimeDsl.RuntimeDslPackage;
import org.polarsys.chess.iot.runtimeDsl.log;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>log</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.polarsys.chess.iot.runtimeDsl.impl.logImpl#getService_name <em>Service name</em>}</li>
 *   <li>{@link org.polarsys.chess.iot.runtimeDsl.impl.logImpl#getLog_type <em>Log type</em>}</li>
 *   <li>{@link org.polarsys.chess.iot.runtimeDsl.impl.logImpl#getFilename <em>Filename</em>}</li>
 *   <li>{@link org.polarsys.chess.iot.runtimeDsl.impl.logImpl#getLocation <em>Location</em>}</li>
 *   <li>{@link org.polarsys.chess.iot.runtimeDsl.impl.logImpl#getMachine_name <em>Machine name</em>}</li>
 * </ul>
 *
 * @generated
 */
public class logImpl extends ruleImpl implements log
{
  /**
   * The default value of the '{@link #getService_name() <em>Service name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getService_name()
   * @generated
   * @ordered
   */
  protected static final String SERVICE_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getService_name() <em>Service name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getService_name()
   * @generated
   * @ordered
   */
  protected String service_name = SERVICE_NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getLog_type() <em>Log type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLog_type()
   * @generated
   * @ordered
   */
  protected static final LogType LOG_TYPE_EDEFAULT = LogType.MACHINE;

  /**
   * The cached value of the '{@link #getLog_type() <em>Log type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLog_type()
   * @generated
   * @ordered
   */
  protected LogType log_type = LOG_TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getFilename() <em>Filename</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFilename()
   * @generated
   * @ordered
   */
  protected static final String FILENAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getFilename() <em>Filename</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFilename()
   * @generated
   * @ordered
   */
  protected String filename = FILENAME_EDEFAULT;

  /**
   * The default value of the '{@link #getLocation() <em>Location</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLocation()
   * @generated
   * @ordered
   */
  protected static final String LOCATION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getLocation() <em>Location</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLocation()
   * @generated
   * @ordered
   */
  protected String location = LOCATION_EDEFAULT;

  /**
   * The default value of the '{@link #getMachine_name() <em>Machine name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMachine_name()
   * @generated
   * @ordered
   */
  protected static final String MACHINE_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getMachine_name() <em>Machine name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMachine_name()
   * @generated
   * @ordered
   */
  protected String machine_name = MACHINE_NAME_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected logImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return RuntimeDslPackage.Literals.LOG;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getService_name()
  {
    return service_name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setService_name(String newService_name)
  {
    String oldService_name = service_name;
    service_name = newService_name;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RuntimeDslPackage.LOG__SERVICE_NAME, oldService_name, service_name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LogType getLog_type()
  {
    return log_type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setLog_type(LogType newLog_type)
  {
    LogType oldLog_type = log_type;
    log_type = newLog_type == null ? LOG_TYPE_EDEFAULT : newLog_type;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RuntimeDslPackage.LOG__LOG_TYPE, oldLog_type, log_type));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getFilename()
  {
    return filename;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFilename(String newFilename)
  {
    String oldFilename = filename;
    filename = newFilename;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RuntimeDslPackage.LOG__FILENAME, oldFilename, filename));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getLocation()
  {
    return location;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setLocation(String newLocation)
  {
    String oldLocation = location;
    location = newLocation;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RuntimeDslPackage.LOG__LOCATION, oldLocation, location));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getMachine_name()
  {
    return machine_name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMachine_name(String newMachine_name)
  {
    String oldMachine_name = machine_name;
    machine_name = newMachine_name;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RuntimeDslPackage.LOG__MACHINE_NAME, oldMachine_name, machine_name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case RuntimeDslPackage.LOG__SERVICE_NAME:
        return getService_name();
      case RuntimeDslPackage.LOG__LOG_TYPE:
        return getLog_type();
      case RuntimeDslPackage.LOG__FILENAME:
        return getFilename();
      case RuntimeDslPackage.LOG__LOCATION:
        return getLocation();
      case RuntimeDslPackage.LOG__MACHINE_NAME:
        return getMachine_name();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case RuntimeDslPackage.LOG__SERVICE_NAME:
        setService_name((String)newValue);
        return;
      case RuntimeDslPackage.LOG__LOG_TYPE:
        setLog_type((LogType)newValue);
        return;
      case RuntimeDslPackage.LOG__FILENAME:
        setFilename((String)newValue);
        return;
      case RuntimeDslPackage.LOG__LOCATION:
        setLocation((String)newValue);
        return;
      case RuntimeDslPackage.LOG__MACHINE_NAME:
        setMachine_name((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case RuntimeDslPackage.LOG__SERVICE_NAME:
        setService_name(SERVICE_NAME_EDEFAULT);
        return;
      case RuntimeDslPackage.LOG__LOG_TYPE:
        setLog_type(LOG_TYPE_EDEFAULT);
        return;
      case RuntimeDslPackage.LOG__FILENAME:
        setFilename(FILENAME_EDEFAULT);
        return;
      case RuntimeDslPackage.LOG__LOCATION:
        setLocation(LOCATION_EDEFAULT);
        return;
      case RuntimeDslPackage.LOG__MACHINE_NAME:
        setMachine_name(MACHINE_NAME_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case RuntimeDslPackage.LOG__SERVICE_NAME:
        return SERVICE_NAME_EDEFAULT == null ? service_name != null : !SERVICE_NAME_EDEFAULT.equals(service_name);
      case RuntimeDslPackage.LOG__LOG_TYPE:
        return log_type != LOG_TYPE_EDEFAULT;
      case RuntimeDslPackage.LOG__FILENAME:
        return FILENAME_EDEFAULT == null ? filename != null : !FILENAME_EDEFAULT.equals(filename);
      case RuntimeDslPackage.LOG__LOCATION:
        return LOCATION_EDEFAULT == null ? location != null : !LOCATION_EDEFAULT.equals(location);
      case RuntimeDslPackage.LOG__MACHINE_NAME:
        return MACHINE_NAME_EDEFAULT == null ? machine_name != null : !MACHINE_NAME_EDEFAULT.equals(machine_name);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (service_name: ");
    result.append(service_name);
    result.append(", log_type: ");
    result.append(log_type);
    result.append(", filename: ");
    result.append(filename);
    result.append(", location: ");
    result.append(location);
    result.append(", machine_name: ");
    result.append(machine_name);
    result.append(')');
    return result.toString();
  }

} //logImpl
