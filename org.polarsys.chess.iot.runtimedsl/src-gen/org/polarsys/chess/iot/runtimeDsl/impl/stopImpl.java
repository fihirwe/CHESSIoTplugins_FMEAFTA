/**
 * generated by Xtext 2.12.0
 */
package org.polarsys.chess.iot.runtimeDsl.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.polarsys.chess.iot.runtimeDsl.RuntimeDslPackage;
import org.polarsys.chess.iot.runtimeDsl.stop;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>stop</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.polarsys.chess.iot.runtimeDsl.impl.stopImpl#getService_name <em>Service name</em>}</li>
 *   <li>{@link org.polarsys.chess.iot.runtimeDsl.impl.stopImpl#getMachine_name <em>Machine name</em>}</li>
 * </ul>
 *
 * @generated
 */
public class stopImpl extends ruleImpl implements stop
{
  /**
   * The default value of the '{@link #getService_name() <em>Service name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getService_name()
   * @generated
   * @ordered
   */
  protected static final String SERVICE_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getService_name() <em>Service name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getService_name()
   * @generated
   * @ordered
   */
  protected String service_name = SERVICE_NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getMachine_name() <em>Machine name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMachine_name()
   * @generated
   * @ordered
   */
  protected static final String MACHINE_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getMachine_name() <em>Machine name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMachine_name()
   * @generated
   * @ordered
   */
  protected String machine_name = MACHINE_NAME_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected stopImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return RuntimeDslPackage.Literals.STOP;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getService_name()
  {
    return service_name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setService_name(String newService_name)
  {
    String oldService_name = service_name;
    service_name = newService_name;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RuntimeDslPackage.STOP__SERVICE_NAME, oldService_name, service_name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getMachine_name()
  {
    return machine_name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMachine_name(String newMachine_name)
  {
    String oldMachine_name = machine_name;
    machine_name = newMachine_name;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RuntimeDslPackage.STOP__MACHINE_NAME, oldMachine_name, machine_name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case RuntimeDslPackage.STOP__SERVICE_NAME:
        return getService_name();
      case RuntimeDslPackage.STOP__MACHINE_NAME:
        return getMachine_name();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case RuntimeDslPackage.STOP__SERVICE_NAME:
        setService_name((String)newValue);
        return;
      case RuntimeDslPackage.STOP__MACHINE_NAME:
        setMachine_name((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case RuntimeDslPackage.STOP__SERVICE_NAME:
        setService_name(SERVICE_NAME_EDEFAULT);
        return;
      case RuntimeDslPackage.STOP__MACHINE_NAME:
        setMachine_name(MACHINE_NAME_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case RuntimeDslPackage.STOP__SERVICE_NAME:
        return SERVICE_NAME_EDEFAULT == null ? service_name != null : !SERVICE_NAME_EDEFAULT.equals(service_name);
      case RuntimeDslPackage.STOP__MACHINE_NAME:
        return MACHINE_NAME_EDEFAULT == null ? machine_name != null : !MACHINE_NAME_EDEFAULT.equals(machine_name);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (service_name: ");
    result.append(service_name);
    result.append(", machine_name: ");
    result.append(machine_name);
    result.append(')');
    return result.toString();
  }

} //stopImpl
