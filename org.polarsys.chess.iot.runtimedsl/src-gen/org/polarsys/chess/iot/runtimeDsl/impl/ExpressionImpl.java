/**
 * generated by Xtext 2.12.0
 */
package org.polarsys.chess.iot.runtimeDsl.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.polarsys.chess.iot.runtimeDsl.AbstractAgent;
import org.polarsys.chess.iot.runtimeDsl.BOOLEAN;
import org.polarsys.chess.iot.runtimeDsl.Expression;
import org.polarsys.chess.iot.runtimeDsl.RuntimeDslPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Expression</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.polarsys.chess.iot.runtimeDsl.impl.ExpressionImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.polarsys.chess.iot.runtimeDsl.impl.ExpressionImpl#getSetup <em>Setup</em>}</li>
 *   <li>{@link org.polarsys.chess.iot.runtimeDsl.impl.ExpressionImpl#getPlan <em>Plan</em>}</li>
 *   <li>{@link org.polarsys.chess.iot.runtimeDsl.impl.ExpressionImpl#getDescription <em>Description</em>}</li>
 *   <li>{@link org.polarsys.chess.iot.runtimeDsl.impl.ExpressionImpl#getAgent <em>Agent</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ExpressionImpl extends MinimalEObjectImpl.Container implements Expression
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getSetup() <em>Setup</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSetup()
   * @generated
   * @ordered
   */
  protected static final BOOLEAN SETUP_EDEFAULT = BOOLEAN.TRUE;

  /**
   * The cached value of the '{@link #getSetup() <em>Setup</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSetup()
   * @generated
   * @ordered
   */
  protected BOOLEAN setup = SETUP_EDEFAULT;

  /**
   * The cached value of the '{@link #getPlan() <em>Plan</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPlan()
   * @generated
   * @ordered
   */
  protected Expression plan;

  /**
   * The default value of the '{@link #getDescription() <em>Description</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescription()
   * @generated
   * @ordered
   */
  protected static final String DESCRIPTION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDescription() <em>Description</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescription()
   * @generated
   * @ordered
   */
  protected String description = DESCRIPTION_EDEFAULT;

  /**
   * The cached value of the '{@link #getAgent() <em>Agent</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAgent()
   * @generated
   * @ordered
   */
  protected EList<AbstractAgent> agent;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ExpressionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return RuntimeDslPackage.Literals.EXPRESSION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RuntimeDslPackage.EXPRESSION__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BOOLEAN getSetup()
  {
    return setup;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSetup(BOOLEAN newSetup)
  {
    BOOLEAN oldSetup = setup;
    setup = newSetup == null ? SETUP_EDEFAULT : newSetup;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RuntimeDslPackage.EXPRESSION__SETUP, oldSetup, setup));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Expression getPlan()
  {
    if (plan != null && plan.eIsProxy())
    {
      InternalEObject oldPlan = (InternalEObject)plan;
      plan = (Expression)eResolveProxy(oldPlan);
      if (plan != oldPlan)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, RuntimeDslPackage.EXPRESSION__PLAN, oldPlan, plan));
      }
    }
    return plan;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Expression basicGetPlan()
  {
    return plan;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPlan(Expression newPlan)
  {
    Expression oldPlan = plan;
    plan = newPlan;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RuntimeDslPackage.EXPRESSION__PLAN, oldPlan, plan));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getDescription()
  {
    return description;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDescription(String newDescription)
  {
    String oldDescription = description;
    description = newDescription;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RuntimeDslPackage.EXPRESSION__DESCRIPTION, oldDescription, description));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<AbstractAgent> getAgent()
  {
    if (agent == null)
    {
      agent = new EObjectContainmentEList<AbstractAgent>(AbstractAgent.class, this, RuntimeDslPackage.EXPRESSION__AGENT);
    }
    return agent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case RuntimeDslPackage.EXPRESSION__AGENT:
        return ((InternalEList<?>)getAgent()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case RuntimeDslPackage.EXPRESSION__NAME:
        return getName();
      case RuntimeDslPackage.EXPRESSION__SETUP:
        return getSetup();
      case RuntimeDslPackage.EXPRESSION__PLAN:
        if (resolve) return getPlan();
        return basicGetPlan();
      case RuntimeDslPackage.EXPRESSION__DESCRIPTION:
        return getDescription();
      case RuntimeDslPackage.EXPRESSION__AGENT:
        return getAgent();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case RuntimeDslPackage.EXPRESSION__NAME:
        setName((String)newValue);
        return;
      case RuntimeDslPackage.EXPRESSION__SETUP:
        setSetup((BOOLEAN)newValue);
        return;
      case RuntimeDslPackage.EXPRESSION__PLAN:
        setPlan((Expression)newValue);
        return;
      case RuntimeDslPackage.EXPRESSION__DESCRIPTION:
        setDescription((String)newValue);
        return;
      case RuntimeDslPackage.EXPRESSION__AGENT:
        getAgent().clear();
        getAgent().addAll((Collection<? extends AbstractAgent>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case RuntimeDslPackage.EXPRESSION__NAME:
        setName(NAME_EDEFAULT);
        return;
      case RuntimeDslPackage.EXPRESSION__SETUP:
        setSetup(SETUP_EDEFAULT);
        return;
      case RuntimeDslPackage.EXPRESSION__PLAN:
        setPlan((Expression)null);
        return;
      case RuntimeDslPackage.EXPRESSION__DESCRIPTION:
        setDescription(DESCRIPTION_EDEFAULT);
        return;
      case RuntimeDslPackage.EXPRESSION__AGENT:
        getAgent().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case RuntimeDslPackage.EXPRESSION__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case RuntimeDslPackage.EXPRESSION__SETUP:
        return setup != SETUP_EDEFAULT;
      case RuntimeDslPackage.EXPRESSION__PLAN:
        return plan != null;
      case RuntimeDslPackage.EXPRESSION__DESCRIPTION:
        return DESCRIPTION_EDEFAULT == null ? description != null : !DESCRIPTION_EDEFAULT.equals(description);
      case RuntimeDslPackage.EXPRESSION__AGENT:
        return agent != null && !agent.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", setup: ");
    result.append(setup);
    result.append(", description: ");
    result.append(description);
    result.append(')');
    return result.toString();
  }

} //ExpressionImpl
